Grading at 10/25/2022:02:37:41.986362
For commit ID 4414d6506f12b93cd4bcef80f3cc9d78682e4a90
Grading at Mon Oct 24 10:37:39 PM EDT 2022
Doing some basic checking for your submission

Step 1
Checking that story-step1 compiles
rm -f *~ story-step1  story-step1.o rand_story.o
gcc -std=gnu99 -pedantic -Wall -Werror -ggdb3 -c rand_story.c
gcc -std=gnu99 -pedantic -Wall -Werror -ggdb3 -c story-step1.c
gcc -o story-step1 story-step1.o rand_story.o provided.o
rm story-step1.o
The code compiled (good)
Executable story-step1 exists (good)
Checking with provided test case story.txt
Your file matched the expected output
Now running YOUR tests for step 1

1.1: Current test is story-step1 story.txt
-----------------------------
Your output looks good. Lets check valgrind
  - Valgrind reported errors
Valgrind reported errors or memory leaks:
==3853400== Memcheck, a memory error detector
==3853400== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==3853400== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==3853400== Command: ./story-step1 story.txt
==3853400== Parent PID: 3853399
==3853400== 
==3853400== Invalid read of size 8
==3853400==    at 0x109646: readCatName (rand_story.c:34)
==3853400==    by 0x1096F4: readStoryLine (rand_story.c:42)
==3853400==    by 0x10946A: main (story-step1.c:19)
==3853400==  Address 0x4a8f3b8 is 0 bytes after a block of size 8 alloc'd
==3853400==    at 0x48487A9: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==3853400==    by 0x109606: readCatName (rand_story.c:30)
==3853400==    by 0x1096F4: readStoryLine (rand_story.c:42)
==3853400==    by 0x10946A: main (story-step1.c:19)
==3853400== 
==3853400== 
==3853400== HEAP SUMMARY:
==3853400==     in use at exit: 323 bytes in 13 blocks
==3853400==   total heap usage: 16 allocs, 3 frees, 8,987 bytes allocated
==3853400== 
==3853400== 23 bytes in 3 blocks are definitely lost in loss record 2 of 5
==3853400==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==3853400==    by 0x490B64E: strndup (strndup.c:43)
==3853400==    by 0x10956F: readCatName (rand_story.c:20)
==3853400==    by 0x1096F4: readStoryLine (rand_story.c:42)
==3853400==    by 0x10946A: main (story-step1.c:19)
==3853400== 
==3853400== 47 (24 direct, 23 indirect) bytes in 3 blocks are definitely lost in loss record 3 of 5
==3853400==    at 0x48487A9: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==3853400==    by 0x109606: readCatName (rand_story.c:30)
==3853400==    by 0x1096F4: readStoryLine (rand_story.c:42)
==3853400==    by 0x10946A: main (story-step1.c:19)
==3853400== 
==3853400== 120 bytes in 1 blocks are definitely lost in loss record 4 of 5
==3853400==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==3853400==    by 0x48E31A2: getdelim (iogetdelim.c:62)
==3853400==    by 0x109481: main (story-step1.c:18)
==3853400== 
==3853400== 133 bytes in 3 blocks are definitely lost in loss record 5 of 5
==3853400==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==3853400==    by 0x490B60E: strdup (strdup.c:42)
==3853400==    by 0x109848: readStoryLine (rand_story.c:52)
==3853400==    by 0x10946A: main (story-step1.c:19)
==3853400== 
==3853400== LEAK SUMMARY:
==3853400==    definitely lost: 300 bytes in 10 blocks
==3853400==    indirectly lost: 23 bytes in 3 blocks
==3853400==      possibly lost: 0 bytes in 0 blocks
==3853400==    still reachable: 0 bytes in 0 blocks
==3853400==         suppressed: 0 bytes in 0 blocks
==3853400== 
==3853400== For lists of detected and suppressed errors, rerun with: -s
==3853400== ERROR SUMMARY: 7 errors from 5 contexts (suppressed: 0 from 0)

1.2: Current test is story-step1 storye1.txt
-----------------------------
Great: we both considered this an error
Lets check if it valgrinds:
Valgrind was clean

1.3: Current test is story-step1 storye2.txt
-----------------------------
Your output looks good. Lets check valgrind
  - Valgrind reported errors
Valgrind reported errors or memory leaks:
==3853519== Memcheck, a memory error detector
==3853519== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==3853519== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==3853519== Command: ./story-step1 storye2.txt
==3853519== Parent PID: 3853518
==3853519== 
==3853519== Invalid read of size 8
==3853519==    at 0x109646: readCatName (rand_story.c:34)
==3853519==    by 0x1096F4: readStoryLine (rand_story.c:42)
==3853519==    by 0x10946A: main (story-step1.c:19)
==3853519==  Address 0x4a8f3b8 is 0 bytes after a block of size 8 alloc'd
==3853519==    at 0x48487A9: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==3853519==    by 0x109606: readCatName (rand_story.c:30)
==3853519==    by 0x1096F4: readStoryLine (rand_story.c:42)
==3853519==    by 0x10946A: main (story-step1.c:19)
==3853519== 
==3853519== 
==3853519== HEAP SUMMARY:
==3853519==     in use at exit: 139 bytes in 5 blocks
==3853519==   total heap usage: 8 allocs, 3 frees, 8,803 bytes allocated
==3853519== 
==3853519== 3 bytes in 1 blocks are definitely lost in loss record 2 of 5
==3853519==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==3853519==    by 0x490B64E: strndup (strndup.c:43)
==3853519==    by 0x10956F: readCatName (rand_story.c:20)
==3853519==    by 0x1096F4: readStoryLine (rand_story.c:42)
==3853519==    by 0x10946A: main (story-step1.c:19)
==3853519== 
==3853519== 5 bytes in 1 blocks are definitely lost in loss record 3 of 5
==3853519==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==3853519==    by 0x490B60E: strdup (strdup.c:42)
==3853519==    by 0x109848: readStoryLine (rand_story.c:52)
==3853519==    by 0x10946A: main (story-step1.c:19)
==3853519== 
==3853519== 11 (8 direct, 3 indirect) bytes in 1 blocks are definitely lost in loss record 4 of 5
==3853519==    at 0x48487A9: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==3853519==    by 0x109606: readCatName (rand_story.c:30)
==3853519==    by 0x1096F4: readStoryLine (rand_story.c:42)
==3853519==    by 0x10946A: main (story-step1.c:19)
==3853519== 
==3853519== 120 bytes in 1 blocks are definitely lost in loss record 5 of 5
==3853519==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==3853519==    by 0x48E31A2: getdelim (iogetdelim.c:62)
==3853519==    by 0x109481: main (story-step1.c:18)
==3853519== 
==3853519== LEAK SUMMARY:
==3853519==    definitely lost: 136 bytes in 4 blocks
==3853519==    indirectly lost: 3 bytes in 1 blocks
==3853519==      possibly lost: 0 bytes in 0 blocks
==3853519==    still reachable: 0 bytes in 0 blocks
==3853519==         suppressed: 0 bytes in 0 blocks
==3853519== 
==3853519== For lists of detected and suppressed errors, rerun with: -s
==3853519== ERROR SUMMARY: 5 errors from 5 contexts (suppressed: 0 from 0)

1.4: Current test is story-step1 storye3.txt
-----------------------------
Your output looks good. Lets check valgrind
  - Valgrind reported errors
Valgrind reported errors or memory leaks:
==3853548== Memcheck, a memory error detector
==3853548== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==3853548== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==3853548== Command: ./story-step1 storye3.txt
==3853548== Parent PID: 3853547
==3853548== 
==3853548== Invalid read of size 8
==3853548==    at 0x109646: readCatName (rand_story.c:34)
==3853548==    by 0x1096F4: readStoryLine (rand_story.c:42)
==3853548==    by 0x10946A: main (story-step1.c:19)
==3853548==  Address 0x4a8f3b8 is 0 bytes after a block of size 8 alloc'd
==3853548==    at 0x48487A9: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==3853548==    by 0x109606: readCatName (rand_story.c:30)
==3853548==    by 0x1096F4: readStoryLine (rand_story.c:42)
==3853548==    by 0x10946A: main (story-step1.c:19)
==3853548== 
==3853548== 
==3853548== HEAP SUMMARY:
==3853548==     in use at exit: 148 bytes in 5 blocks
==3853548==   total heap usage: 8 allocs, 3 frees, 8,812 bytes allocated
==3853548== 
==3853548== 6 bytes in 1 blocks are definitely lost in loss record 1 of 5
==3853548==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==3853548==    by 0x490B60E: strdup (strdup.c:42)
==3853548==    by 0x109848: readStoryLine (rand_story.c:52)
==3853548==    by 0x10946A: main (story-step1.c:19)
==3853548== 
==3853548== 7 bytes in 1 blocks are definitely lost in loss record 3 of 5
==3853548==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==3853548==    by 0x490B64E: strndup (strndup.c:43)
==3853548==    by 0x10956F: readCatName (rand_story.c:20)
==3853548==    by 0x1096F4: readStoryLine (rand_story.c:42)
==3853548==    by 0x10946A: main (story-step1.c:19)
==3853548== 
==3853548== 15 (8 direct, 7 indirect) bytes in 1 blocks are definitely lost in loss record 4 of 5
==3853548==    at 0x48487A9: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==3853548==    by 0x109606: readCatName (rand_story.c:30)
==3853548==    by 0x1096F4: readStoryLine (rand_story.c:42)
==3853548==    by 0x10946A: main (story-step1.c:19)
==3853548== 
==3853548== 120 bytes in 1 blocks are definitely lost in loss record 5 of 5
==3853548==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==3853548==    by 0x48E31A2: getdelim (iogetdelim.c:62)
==3853548==    by 0x109481: main (story-step1.c:18)
==3853548== 
==3853548== LEAK SUMMARY:
==3853548==    definitely lost: 141 bytes in 4 blocks
==3853548==    indirectly lost: 7 bytes in 1 blocks
==3853548==      possibly lost: 0 bytes in 0 blocks
==3853548==    still reachable: 0 bytes in 0 blocks
==3853548==         suppressed: 0 bytes in 0 blocks
==3853548== 
==3853548== For lists of detected and suppressed errors, rerun with: -s
==3853548== ERROR SUMMARY: 5 errors from 5 contexts (suppressed: 0 from 0)

Step 2
Checking that story-step2 compiles
rm -f *~ story-step1  story-step1.o rand_story.o
gcc -std=gnu99 -pedantic -Wall -Werror -ggdb3 -c rand_story.c
gcc -std=gnu99 -pedantic -Wall -Werror -ggdb3 -c story-step2.c
The code did not compile!

Overall Grade: NO GRADE YET
